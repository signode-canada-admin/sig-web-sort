<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signode Picktickets
    </title>

    <!-- IMPORTS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/styles-edi.css">
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://kit.fontawesome.com/065b6a01b6.js"></script>
    <!-- older version of fontawesome for home icon -->
    <script src="https://kit.fontawesome.com/b99e675b6e.js"></script> 

</head>


<body>
    <!-- ******************************* NAVIGATION BAR ************************************** -->

    <div class="navigation-bar">
        <a class="back-button" href="javascript:history.back()"><strong>&#8249;</strong></a>
        <a class = "home" href="/" ><i class="fa fa-fw fa-home"></i></a> 
        <a class = "refresh" onclick="window.location.reload();" ><i class="fa-solid fa-arrow-rotate-right"></i></a> 
        </a> 
    </div><br>


    <div onmousemove="updateSXPOlist()" style="max-width: 90%; margin: 20px auto 20px auto;">

        
        <!-- ******************************* HEADER ************************************** -->
        
        <h2 class="edi-header">Order Entry EDI</h2> 

        <div id="listStatus"></div>

        <br>
        <div id="main"></div>


        <!-- ******************************* STICKY NAVBAR AND BUTTON TO CREATE PDF ************************************** -->
        
        <nav style="background-color: rgb(0, 0, 0, 0.3);" class="navbar fixed-bottom">
            <div id="POs_SX" class="container-item-1" style="max-width: 90%;"></div>
            <button id="submit_button" onclick="post()" type="submit" class="btn btn-success">CREATE <span id="no_of_sheets" class="badge badge-light"></span></button>
           
            <!-- ******************************* LOADING TEXT AND BUTTON ************************************** -->
            <div style="display:none" id="spinner" class="spinner-border text-info" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </nav>

        <!-- ******************************* FOOTER ************************************** -->
        <br><br>
        <%- include("./partials/footer.ejs") %>
    
    </div>


    <script>

        const SITES = {
        "pp": "Premium_plus",
        "srap": "Srap",
        "bi": "Bunzl_industrial",
        "str": "Srap_Tool_Repair",
        "am": "Arcelor_Mittal",
        "service": "Service"
        }

        const temp_env = {
            BASE_API_URL_TEMP: "http://localhost:4000/api",
            BASE_API_URL: "http://10.100.6.111:4000/api",
            BASE_WEB_URL_TEMP: "http://localhost:3000",
            BASE_WEB_URL: "http://10.100.6.111:3000"
        }


        function main(customers, data) {
            document.getElementById("main").innerHTML = `
                ${customers.map(item => {
                    return `
                        <br>
                        <h5 style="border-radius: 30px;display: inherit; color: white; background-color: #b43c25; padding: 10px; margin-top: 5px" ><strong>( ${data[item].len} )</strong> ${SITES[item]}</h5>
                                                
                        <div id="collapse-${item}" class="list-group" style="background-color: rgb(243, 243, 243);"></div>
                    `
                }).join("")}
            `
        }


        async function listpdfs (site) {
            // const response = await fetch(`http://localhost:4000/api/edi/${site}/pdfs`)
            const response = await fetch(`${temp_env.BASE_API_URL}/edi/${site}/pdfs`)
            const data = await response.json()
            return data
        }

        async function fetch_data(site) {
            // const response = await fetch(`http://localhost:4000/api/edi/${site}/pdfs`)
            const response = await fetch(`${temp_env.BASE_API_URL}/edi/${site}/pdfs`)
            const data = await response.json()
            return data
        }

        async function listPO (customers) {
            const pp = await fetch_data("pp")
            const srap = await fetch_data("srap")
            const str = await fetch_data("str")
            const bi = await fetch_data("bi")
            const am = await fetch_data("am")
            const service = await fetch_data("service")
            main(["pp", "srap", "bi", "str", "am", "service"], {"pp": pp, "srap": srap, "bi": bi, "str": str, "am": am, "service": service})
            // listStatus(pp)
            createCollapseList(pp, "pp")
            createCollapseList(srap, "srap")
            createCollapseList(str, "str")
            createCollapseList(bi, "bi")
            createCollapseList(am, "am")
            createCollapseList(service, "service")
        }

        function listStatus (data) {
            if (data.len != 0) {
                document.getElementById("listStatus").innerHTML = `
                <div class="alert alert-success" role="alert">
                    <h7>
                        <strong>( ${data.len} )</strong> Premium Plus PO(s) found, click on individual PO links below for more information
                    </h7>
                </div>
                `
            } else {
                document.getElementById("listStatus").innerHTML = `
                <div class="alert alert-info" role="alert">
                    <h6 class="alert-heading">There are no availabe Premium Plus PO's, please wait for <strong>Dept (Y:)</strong> drive to sync or try refreshing this page</h6>
                    <hr>
                    <p class="mb-0">If the problem persists, Please contact the CI-Team at <a class="sig-links" style="color: tomato;" href = "mailto: CITEAM@PKGconnect.onmicrosoft.com"><strong>CITEAM@PKGconnect.onmicrosoft.com</strong></a></p>
                </div>
                `
            }
        }

        function createCollapseList (data, site) {
            const list_len = data.len;
            const list = data.list
            document.getElementById(`collapse-${site}`).innerHTML= `
                ${list.map(line => {
                    let id_line = line.split(" ").join("_")
                  return `
                  
                    <a style="text-align: center; cursor: pointer;" class="list-group-item list-group-item-action"  data-toggle="collapse" href="#collapseExample${id_line}"  aria-expanded="false" aria-controls="collapseExample">
                    <b>${line}</b>
                    </a>

                    <div class="collapse" id="collapseExample${id_line}">
                        <section>
                            <embed class="sig-pdf" src="${temp_env.BASE_WEB_URL}/edi/${site}/${line}">
                        </section>
                    </div>
                    `
                }).join("")}
            `
        }

      
        async function post() {
            const submit = document.getElementById("submit_button")
            const spinner = document.getElementById("spinner")
            submit.style.display = "none"
            spinner.style.display = ""
            const response = await fetch(`${temp_env.BASE_API_URL}/edi/createSX`)
            const data = await response.json()
            if (data.success) {
                spinner.style.display = "none"
                submit.style.display = ""
            }
            updateSXPOlist()
            listPO()
        } 

        async function updateSXPOlist() {
            const response = await fetch(`${temp_env.BASE_API_URL}/edimetadata`)
            const data = await response.json()

            document.getElementById("no_of_sheets").innerText = `${data.pdfs.length}`

            document.getElementById("POs_SX").innerHTML = `
                ${data.pdfs.map(pdf => {
                    const temp = pdf.split("*SEPARATOR*")
                    return `
                        <h5 id="${temp[1]}_${temp[0]}" class="badge rounded-pill bg-info text-light"><span>${temp[1]} | </span>${temp[0]}</h5>
                    `
                }).join("")}
            `   
        }

        listPO()

    </script> <br><br><br>

</body>
</html>

